# Multi-stage build for AstroGenie application
# Optimized for Google Cloud Run deployment

# Build stage
FROM node:18-alpine AS build

# Set working directory
WORKDIR /app

# Set environment variables
ENV NODE_OPTIONS=--openssl-legacy-provider
ENV DISABLE_ESLINT_PLUGIN=true
ENV NODE_ENV=production

# Copy package files
COPY package.json package-lock.json ./

# Install dependencies
RUN npm ci --only=production

# Copy application code
COPY . .

# Run the icon font copy script
RUN node copy-icon-fonts.js

# Build the application
RUN npm run build:web

# Production stage
FROM nginx:alpine AS production

# Copy custom nginx config
COPY deploy/gcp/config/nginx-gcp.conf /etc/nginx/conf.d/default.conf

# Copy built files from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Create required directories
RUN mkdir -p /var/log/nginx

# Set proper permissions
RUN chmod -R 755 /usr/share/nginx/html && \
    chown -R nginx:nginx /var/log/nginx

# Expose port
EXPOSE 8080

# Use non-root user
USER nginx

# Start Nginx
CMD ["nginx", "-g", "daemon off;"] 